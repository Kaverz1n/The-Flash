import os

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from callback_factories.order_factory import OrderCallbackFactory


def get_admin_panel_keyboard(maintenance_mode: bool, admin_telegram_id: int) -> ReplyKeyboardMarkup:
    '''
    A keyboard for the admin panel
    :param maintenance_mode: maintenance mode value
    :param admin_telegram_id: admin telegram id
    '''
    buttons = [
        [KeyboardButton(text='üì¶\u00A0–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã\u00A0üì¶')],
        [KeyboardButton(text='üí¥\u00A0–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å —é–∞–Ω—è\u00A0üí¥')],
        [KeyboardButton(text='üíµ\u00A0–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é\u00A0üíµ')],
        [KeyboardButton(text='ü•∑\u00A0–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞\u00A0ü•∑')],
    ]

    if admin_telegram_id == int(os.getenv('MAIN_ADMIN_TELEGRAM_ID')):
        buttons.append([KeyboardButton(text='üßü‚Äç‚ôÇÔ∏è\u00A0–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞\u00A0üßü‚Äç‚ôÇÔ∏è')])

    if maintenance_mode:
        buttons.append([KeyboardButton(text='üîß\u00A0–í—ã–∫–ª. —Ä–µ–∂–∏–º —Ç–µ—Ö.–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\u00A0üîß')])
    else:
        buttons.append([KeyboardButton(text='üîß\u00A0–í–∫–ª. —Ä–µ–∂–∏–º —Ç–µ—Ö.–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\u00A0üîß')])

    buttons.append([KeyboardButton(text='üö™\u00A0–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω. –ø–∞–Ω–µ–ª–∏\u00A0üö™')])

    keyboard = ReplyKeyboardMarkup(
        keyboard=buttons,
        resize_keyboard=True,
        input_field_placeholder="–ß—Ç–æ –¥–µ–ª–∞–µ–º —Å–µ–≥–æ–¥–Ω—è?"
    )

    return keyboard


def get_check_orders_keyboard() -> ReplyKeyboardMarkup:
    '''
    A keyboard for checking orders
    '''
    buttons = [
        [KeyboardButton(text='üóÇÔ∏è\u00A0–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–∞—Ö\u00A0üóÇÔ∏è')],
        [KeyboardButton(text='üõí\u00A0–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑—É\u00A0üõí')],
        [KeyboardButton(text='ü•∑\u00A0–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω. –ø–∞–Ω–µ–ª—å\u00A0ü•∑')]
    ]

    keyboard = ReplyKeyboardMarkup(
        keyboard=buttons,
        resize_keyboard=True,
        input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é'
    )

    return keyboard


def change_order_status_keyboard(
        order_status: str,
        order_id: int,
        user_telegram_id: int,
        user_chat_telegram_id: int
) -> InlineKeyboardMarkup:
    '''
    A keyboard for changing order status
    '''
    builder = InlineKeyboardBuilder()

    if order_status == '–°–æ–∑–¥–∞–Ω':
        builder.button(
            text='–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
            callback_data=OrderCallbackFactory(
                action='–æ—Ç–ø—Ä–∞–≤–∏—Ç—å', order_id=order_id,
                user_telegram_id=user_telegram_id,
                user_chat_telegram_id=user_chat_telegram_id
            )
        ),
        builder.button(
            text='–û—Ç–º–µ–Ω—ë–Ω',
            callback_data=OrderCallbackFactory(
                action='–æ—Ç–º–µ–Ω–∏—Ç—å', order_id=order_id,
                user_telegram_id=user_telegram_id,
                user_chat_telegram_id=user_chat_telegram_id
            )
        ),

    builder.button(text='–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω. –ø–∞–Ω–µ–ª—å', callback_data='back_to_admin')

    builder.adjust(1)

    return builder.as_markup()


def get_back_admin_keyboard() -> InlineKeyboardMarkup:
    '''
    A keyboard for back to the admin panel
    '''
    back_button = [
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω. –ø–∞–Ω–µ–ª—å', callback_data='back_to_admin')]
    ]

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=back_button,
    )

    return keyboard
